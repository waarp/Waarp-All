<!--
  ~ This file is part of Waarp Project (named also Waarp or GG).
  ~
  ~  Copyright (c) 2019, Waarp SAS, and individual contributors by the @author
  ~  tags. See the COPYRIGHT.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~  All Waarp Project is free software: you can redistribute it and/or
  ~ modify it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or (at your
  ~ option) any later version.
  ~
  ~ Waarp is distributed in the hope that it will be useful, but WITHOUT ANY
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
  ~ A PARTICULAR PURPOSE. See the GNU General Public License for more details.
  ~
  ~  You should have received a copy of the GNU General Public License along with
  ~ Waarp . If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>WaarpPackaging6</artifactId>
  <name>Waarp Packaging RPM, DEB, ZIP and TGZ for JRE 6</name>
  <description>
    This module is only intend to allow Packaging at the end of all builds.
  </description>
  <url>https://github.com/waarp/Waarp-All</url>
  <inceptionYear>2021</inceptionYear>
  <parent>
    <groupId>Waarp</groupId>
    <artifactId>Waarp-All</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>


  <properties>
    <module.project>true</module.project>
    <nocode.project>true</nocode.project>
    <unix.name>waarp</unix.name>
    <unix.user>waarp</unix.user>
    <unix.group>waarp</unix.group>
    <packaging.dir>${root.directory}/WaarpPackaging/src/packaging
    </packaging.dir>
    <package.dir>${packaging.dir}/Sources/Linux</package.dir>
    <packagewindows.dir>${packaging.dir}/Sources/Windows</packagewindows.dir>
    <package.name>waarp-all-${project.version}-jre6</package.name>
    <final.jar>Waarp-All-${project.version}-jre6-jar-with-dependencies.jar
    </final.jar>
    <finalpath.jar>
      ${targetDirectory}/${final.jar}
    </finalpath.jar>
  </properties>

  <profiles>
    <profile>
      <id>development</id>
      <properties>
        <skipITs>true</skipITs>
      </properties>
    </profile>
    <profile>
      <id>integration-tests</id>
      <properties>
        <skipITs>true</skipITs>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpDigest</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpCommon</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpCompression</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpIcap</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpPassword</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpThrift</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpExec</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpSnmp</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpGatewayKernel</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpFtpClient</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpR66</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>netty-http-java6</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpGatewayFtp</artifactId>
    </dependency>
    <dependency>
      <groupId>Waarp</groupId>
      <artifactId>WaarpProxyR66</artifactId>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>${ant.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-launcher</artifactId>
            <version>${ant.version}</version>
          </dependency>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>${ant-contrib.version}</version>
            <exclusions>
              <exclusion>
                <groupId>ant</groupId>
                <artifactId>ant</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>IdentifyFinalJar</id>
            <phase>prepare-package</phase>
            <inherited>false</inherited>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antlib.xml"/>
                <copy
                  file="${root.directory}/WaarpProxyR66/target/WaarpProxyR66-${project.version}-jar-with-dependencies.jar"
                  tofile="${finalpath.jar}"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>TAR.GZ-distribution</id>
            <phase>package</phase>
            <inherited>false</inherited>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <tar longfile="gnu"
                     destfile="${targetDirectory}/${package.name}.linux.tar.gz"
                     compression="gzip">
                  <tarfileset
                    dir="${project.build.directory}"
                    filemode="644"
                    username="${unix.user}" group="${unix.group}"
                    fullpath="/usr/share/${unix.name}/lib/${final.jar}"
                    preserveLeadingSlashes="true">
                    <include
                      name="${final.jar}"/>
                  </tarfileset>
                  <tarfileset dir="${package.dir}/etc"
                              filemode="644"
                              username="${unix.user}" group="${unix.group}"
                              prefix="/etc"
                              preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset dir="${package.dir}/usr/bin"
                              filemode="755"
                              username="${unix.user}" group="${unix.group}"
                              prefix="/usr/bin"
                              preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset dir="${package.dir}/usr/share/${unix.name}"
                              filemode="755"
                              username="${unix.user}" group="${unix.group}"
                              prefix="/usr/share/${unix.name}"
                              preserveLeadingSlashes="true">
                    <include name="ftpasswd"/>
                    <include name="init-functions"/>
                    <include name="init-functions-gwftp"/>
                    <include name="variables.sh"/>
                    <include name="variables-gwftp.sh"/>
                  </tarfileset>
                  <tarfileset dir="${root.directory}"
                              filemode="644"
                              username="${unix.user}" group="${unix.group}"
                              prefix="/usr/share/${unix.name}/doc"
                              preserveLeadingSlashes="true">
                    <include name="LICENSE.txt"/>
                  </tarfileset>
                  <tarfileset
                    dir="${root.directory}/target/buildDoc/html"
                    filemode="644"
                    username="${unix.user}" group="${unix.group}"
                    prefix="/usr/share/${unix.name}/doc/html"
                    preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset
                    dir="${root.directory}/target/buildDoc/latex"
                    filemode="644"
                    username="${unix.user}" group="${unix.group}"
                    prefix="/usr/share/${unix.name}/doc"
                    preserveLeadingSlashes="true">
                    <include name="Waarpr66.pdf"/>
                  </tarfileset>
                  <tarfileset
                    dir="${root.directory}/WaarpGatewayFtp/src/main/admin"
                    filemode="644"
                    username="${unix.user}" group="${unix.group}"
                    prefix="/usr/share/${unix.name}/gwftp-admin"
                    preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset
                    dir="${root.directory}/WaarpR66/src/main/httpadmin/admin-bootstrap"
                    filemode="644"
                    username="${unix.user}" group="${unix.group}"
                    prefix="/usr/share/${unix.name}/r66-admin"
                    preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset
                    dir="${package.dir}/usr/share/${unix.name}/templates"
                    filemode="640"
                    username="root" group="root"
                    prefix="/usr/share/${unix.name}/templates"
                    preserveLeadingSlashes="true">
                  </tarfileset>
                  <tarfileset
                    dir="${package.dir}/var"
                    filemode="640"
                    username="root" group="root"
                    prefix="/var"
                    preserveLeadingSlashes="true">
                  </tarfileset>
                </tar>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>ZIP-Windows-distribution</id>
            <phase>package</phase>
            <inherited>false</inherited>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <zip
                  destfile="${targetDirectory}/${package.name}.windows.zip">
                  <zipfileset
                    dir="${project.build.directory}"
                    fullpath="C:/${unix.name}/lib/${final.jar}">
                    <include
                      name="${final.jar}"/>
                  </zipfileset>
                  <zipfileset dir="${packagewindows.dir}/etc"
                              prefix="C:/${unix.name}/etc">
                  </zipfileset>
                  <zipfileset dir="${packagewindows.dir}/bin"
                              prefix="C:/${unix.name}/bin">
                  </zipfileset>
                  <zipfileset dir="${packagewindows.dir}/share"
                              prefix="C:/${unix.name}/share">
                  </zipfileset>
                  <zipfileset dir="${root.directory}"
                              prefix="C:/${unix.name}/doc">
                    <include name="LICENSE.txt"/>
                  </zipfileset>
                  <zipfileset
                    dir="${root.directory}/target/buildDoc/html"
                    prefix="C:/${unix.name}/doc/html">
                  </zipfileset>
                  <zipfileset
                    dir="${root.directory}/target/buildDoc/latex"
                    prefix="C:/${unix.name}/doc">
                    <include name="Waarpr66.pdf"/>
                  </zipfileset>
                  <zipfileset
                    dir="${root.directory}/WaarpGatewayFtp/src/main/admin"
                    prefix="C:/${unix.name}/share/gwftp-admin">
                  </zipfileset>
                  <zipfileset
                    dir="${root.directory}/WaarpR66/src/main/httpadmin/admin-bootstrap"
                    prefix="C:/${unix.name}/share/r66-admin">
                  </zipfileset>
                  <zipfileset
                    dir="${packagewindows.dir}/var"
                    prefix="C:/${unix.name}/var">
                  </zipfileset>
                </zip>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>CopyDeb</id>
            <phase>install</phase>
            <inherited>false</inherited>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy
                  file="${project.build.directory}/rpm/waarp-all/RPMS/noarch/waarp-all-${project.version}-1.noarch.rpm"
                  tofile="${targetDirectory}/${package.name}_1.noarch.rpm"/>
                <copy
                  file="${root.directory}/target/buildDoc/latex/Waarpr66.pdf"
                  tofile="${targetDirectory}/Waarpr66.pdf"/>
                <copydir
                  src="${root.directory}/target/buildDoc/html"
                  dest="${targetDirectory}/html"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>SphinxHtml</id>
            <phase>prepare-package</phase>
            <configuration>
              <executable>make</executable>
              <workingDirectory>${root.directory}/doc/waarp-r66
              </workingDirectory>
              <arguments>
                <argument>html</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <id>SphinxPDF</id>
            <phase>prepare-package</phase>
            <configuration>
              <executable>make</executable>
              <workingDirectory>${root.directory}/doc/waarp-r66
              </workingDirectory>
              <arguments>
                <argument>latexpdf</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>jdeb</artifactId>
        <groupId>org.vafer</groupId>
        <configuration>
          <deb>${targetDirectory}/${package.name}.deb</deb>
          <snapshotExpand>true</snapshotExpand>
          <snapshotEnv>USER</snapshotEnv>
          <skip>false</skip>
          <controlDir>${packaging.dir}/DEBS/control</controlDir>
          <signPackage>true</signPackage>
          <signRole>builder</signRole>
          <skipSubmodules>false</skipSubmodules>
          <skipPOMs>true</skipPOMs>
          <classifier>net</classifier>
          <attach>false</attach>
          <dataSet>

            <!-- Artifacts -->
            <data>
              <src>
                ${finalpath.jar}
              </src>
              <type>file</type>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
              </mapper>
              <dst>
                /usr/share/${unix.name}/lib/${final.jar}
              </dst>
            </data>

            <!-- Conf -->
            <data>
              <src>${package.dir}/etc</src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/etc</prefix>
              </mapper>
            </data>
            <!-- Command -->
            <data>
              <src>${package.dir}/usr/bin</src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0755</filemode>
                <prefix>/usr/bin</prefix>
              </mapper>
            </data>
            <data>
              <type>files</type>
              <missingSrc>ignore</missingSrc>
              <paths>
                <path>${package.dir}/usr/share/${unix.name}/ftpasswd</path>
                <path>${package.dir}/usr/share/${unix.name}/init-functions
                </path>
                <path>
                  ${package.dir}/usr/share/${unix.name}/init-functions-gwftp
                </path>
                <path>${package.dir}/usr/share/${unix.name}/variables.sh
                </path>
                <path>
                  ${package.dir}/usr/share/${unix.name}/variables-gwftp.sh
                </path>
              </paths>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0755</filemode>
              </mapper>
              <dst>/usr/share/${unix.name}</dst>
            </data>
            <!-- Doc & Web support -->
            <data>
              <src>${root.directory}/LICENSE.txt</src>
              <type>file</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/usr/share/${unix.name}/doc</prefix>
              </mapper>
            </data>
            <data>
              <src>
                ${root.directory}/target/buildDoc/html
              </src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/usr/share/${unix.name}/doc/html</prefix>
              </mapper>
            </data>
            <data>
              <src>
                ${root.directory}/target/buildDoc/latex/Waarpr66.pdf
              </src>
              <type>file</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
              </mapper>
              <dst>/usr/share/${unix.name}/doc/WaarpR66.pdf</dst>
            </data>
            <data>
              <src>
                ${root.directory}/WaarpGatewayFtp/src/main/admin
              </src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/usr/share/${unix.name}/gwftp-admin</prefix>
              </mapper>
            </data>
            <data>
              <src>
                ${root.directory}/WaarpR66/src/main/httpadmin/admin-bootstrap
              </src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/usr/share/${unix.name}/r66-admin</prefix>
              </mapper>
            </data>
            <data>
              <src>${package.dir}/usr/share/${unix.name}/templates</src>
              <type>directory</type>
              <missingSrc>ignore</missingSrc>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
                <filemode>0644</filemode>
                <prefix>/usr/share/${unix.name}/templates</prefix>
              </mapper>
            </data>
            <!-- Additional templates -->
            <data>
              <type>template</type>
              <paths>
                <path>/var/lib/${unix.name}</path>
                <path>/var/log/${unix.name}</path>
              </paths>
              <mapper>
                <type>perm</type>
                <user>${unix.user}</user>
                <group>${unix.group}</group>
              </mapper>
            </data>

          </dataSet>
        </configuration>

        <executions>
          <execution>
            <id>generate-deb</id>
            <phase>package</phase>
            <inherited>false</inherited>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <verbose>true</verbose>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <configuration>
          <name>waarp-all</name>
          <disabled>false</disabled>
          <license>GPLv3</license>
          <distribution>Waarp</distribution>
          <packager>Waarp Team</packager>
          <defineStatements/>
          <targetOS>linux</targetOS>
          <requires>
            <require>systemd</require>
            <require>java</require>
          </requires>
          <group>Applications/System</group>
          <keyname>${gpg.keyname}</keyname>
          <passphraseServerId>${gpg.keyname}</passphraseServerId>
          <!--
          <keyPassphrase><passphrase>${gpg.passphrase}</passphrase></keyPassphrase>
          -->
          <defaultDirmode>755</defaultDirmode>
          <defaultFilemode>644</defaultFilemode>
          <defaultUsername>${unix.user}</defaultUsername>
          <defaultGroupname>${unix.group}</defaultGroupname>
          <mappings>
            <!-- Artifacts -->
            <mapping>
              <directory>/usr/share/${unix.name}/lib</directory>
              <sources>
                <source>
                  <location>
                    ${finalpath.jar}
                  </location>
                  <destination>
                    ${final.jar}
                  </destination>
                </source>
              </sources>
            </mapping>
            <!-- Conf -->
            <mapping>
              <directory>/etc</directory>
              <recurseDirectories>True</recurseDirectories>
              <sources>
                <source>
                  <location>${package.dir}/etc</location>
                </source>
              </sources>
            </mapping>
            <!-- Command -->
            <mapping>
              <directory>/usr/bin</directory>
              <filemode>755</filemode>
              <sources>
                <source>
                  <location>${package.dir}/usr/bin</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/share/${unix.name}</directory>
              <filemode>755</filemode>
              <sources>
                <source>
                  <location>${package.dir}/usr/share/${unix.name}/ftpasswd
                  </location>
                </source>
                <source>
                  <location>
                    ${package.dir}/usr/share/${unix.name}/init-functions
                  </location>
                </source>
                <source>
                  <location>
                    ${package.dir}/usr/share/${unix.name}/init-functions-gwftp
                  </location>
                </source>
                <source>
                  <location>
                    ${package.dir}/usr/share/${unix.name}/variables.sh
                  </location>
                </source>
                <source>
                  <location>
                    ${package.dir}/usr/share/${unix.name}/variables-gwftp.sh
                  </location>
                </source>
              </sources>
            </mapping>
            <!-- Doc & Web support -->
            <mapping>
              <directory>/usr/share/${unix.name}/doc</directory>
              <recurseDirectories>True</recurseDirectories>
              <documentation>true</documentation>
              <sources>
                <source>
                  <location>${root.directory}/LICENSE.txt
                  </location>
                </source>
                <source>
                  <location>
                    ${root.directory}/target/buildDoc/latex/Waarpr66.pdf
                  </location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/share/${unix.name}/doc/html</directory>
              <recurseDirectories>True</recurseDirectories>
              <documentation>true</documentation>
              <sources>
                <source>
                  <location>
                    ${root.directory}/target/buildDoc/html
                  </location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/share/${unix.name}/gwftp-admin</directory>
              <recurseDirectories>True</recurseDirectories>
              <sources>
                <source>
                  <location>
                    ${root.directory}/WaarpGatewayFtp/src/main/admin
                  </location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/share/${unix.name}/r66-admin</directory>
              <recurseDirectories>True</recurseDirectories>
              <sources>
                <source>
                  <location>
                    ${root.directory}/WaarpR66/src/main/httpadmin/admin-bootstrap
                  </location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/share/${unix.name}/templates</directory>
              <recurseDirectories>True</recurseDirectories>
              <sources>
                <source>
                  <location>${package.dir}/usr/share/${unix.name}/templates
                  </location>
                </source>
              </sources>
            </mapping>
            <!-- Additional templates -->
            <mapping>
              <directory>/var/log/${unix.name}</directory>
            </mapping>
            <mapping>
              <directory>/var/lib/${unix.name}</directory>
            </mapping>
          </mappings>
          <!-- Systemd hook scriptlets -->
          <preinstallScriptlet>
            <scriptFile>${packaging.dir}/RPMS/preinstall.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
          </preinstallScriptlet>
          <postinstallScriptlet>
            <script>${packaging.dir}/RPMS/postinstall.sh</script>
            <fileEncoding>utf-8</fileEncoding>
          </postinstallScriptlet>
          <preremoveScriptlet>
            <script>${packaging.dir}/RPMS/preuninstall.sh</script>
            <fileEncoding>utf-8</fileEncoding>
          </preremoveScriptlet>
        </configuration>

        <executions>
          <execution>
            <id>generate-rpm</id>
            <inherited>false</inherited>
            <phase>package</phase>
            <goals>
              <goal>rpm</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>