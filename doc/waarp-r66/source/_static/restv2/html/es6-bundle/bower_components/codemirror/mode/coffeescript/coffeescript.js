// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
/**
 * Link to the project's GitHub page:
 * https://github.com/pickhardt/coffeescript-codemirror-mode
 */(function(mod){if("object"==typeof exports&&"object"==typeof module)// CommonJS
mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)// AMD
define(["../../lib/codemirror"],mod);else// Plain browser env
mod(CodeMirror)})(function(CodeMirror){"use strict";CodeMirror.defineMode("coffeescript",function(conf,parserConf){var ERRORCLASS="error";function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b")}var operators=/^(?:->|=>|\+[+=]?|-[\-=]?|\*[\*=]?|\/[\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\|=?|\^=?|\~|!|\?|(or|and|\|\||&&|\?)=)/,delimiters=/^(?:[()\[\]{},:`=;]|\.\.?\.?)/,identifiers=/^[_A-Za-z$][_A-Za-z$0-9]*/,atProp=/^@[_A-Za-z$][_A-Za-z$0-9]*/,wordOperators=wordRegexp(["and","or","not","is","isnt","in","instanceof","typeof"]),indentKeywords=["for","while","loop","if","unless","else","switch","try","catch","finally","class"],commonKeywords=["break","by","continue","debugger","delete","do","in","of","new","return","then","this","@","throw","when","until","extends"],keywords=wordRegexp(indentKeywords.concat(commonKeywords));indentKeywords=wordRegexp(indentKeywords);var stringPrefixes=/^('{3}|\"{3}|['\"])/,regexPrefixes=/^(\/{3}|\/)/,commonConstants=["Infinity","NaN","undefined","null","true","false","on","off","yes","no"],constants=wordRegexp(commonConstants);// Tokenizers
function tokenBase(stream,state){// Handle scope changes
if(stream.sol()){if(null===state.scope.align)state.scope.align=/* eat */!1;var scopeOffset=state.scope.offset;if(stream.eatSpace()){var lineOffset=stream.indentation();if(lineOffset>scopeOffset&&"coffee"==state.scope.type){return"indent"}else if(lineOffset<scopeOffset){return"dedent"}return null}else{if(0<scopeOffset){dedent(stream,state)}}}if(stream.eatSpace()){return null}var ch=stream.peek();// Handle docco title comment (single line)
if(stream.match("####")){stream.skipToEnd();return"comment"}// Handle multi line comments
if(stream.match("###")){state.tokenize=longComment;return state.tokenize(stream,state)}// Single line comment
if("#"===ch){stream.skipToEnd();return"comment"}// Handle number literals
if(stream.match(/^-?[0-9\.]/,!1)){var floatLiteral=!1;// Floats
if(stream.match(/^-?\d*\.\d+(e[\+\-]?\d+)?/i)){floatLiteral=!0}if(stream.match(/^-?\d+\.\d*/)){floatLiteral=!0}if(stream.match(/^-?\.\d+/)){floatLiteral=!0}if(floatLiteral){// prevent from getting extra . on 1..
if("."==stream.peek()){stream.backUp(1)}return"number"}// Integers
var intLiteral=!1;// Hex
if(stream.match(/^-?0x[0-9a-f]+/i)){intLiteral=!0}// Decimal
if(stream.match(/^-?[1-9]\d*(e[\+\-]?\d+)?/)){intLiteral=!0}// Zero by itself with no other piece of number.
if(stream.match(/^-?0(?![\dx])/i)){intLiteral=!0}if(intLiteral){return"number"}}// Handle strings
if(stream.match(stringPrefixes)){state.tokenize=tokenFactory(stream.current(),!1,"string");return state.tokenize(stream,state)}// Handle regex literals
if(stream.match(regexPrefixes)){if("/"!=stream.current()||stream.match(/^.*\//,!1)){// prevent highlight of division
state.tokenize=tokenFactory(stream.current(),!0,"string-2");return state.tokenize(stream,state)}else{stream.backUp(1)}}// Handle operators and delimiters
if(stream.match(operators)||stream.match(wordOperators)){return"operator"}if(stream.match(delimiters)){return"punctuation"}if(stream.match(constants)){return"atom"}if(stream.match(atProp)||state.prop&&stream.match(identifiers)){return"property"}if(stream.match(keywords)){return"keyword"}if(stream.match(identifiers)){return"variable"}// Handle non-detected items
stream.next();return ERRORCLASS}function tokenFactory(delimiter,singleline,outclass){return function(stream,state){while(!stream.eol()){stream.eatWhile(/[^'"\/\\]/);if(stream.eat("\\")){stream.next();if(singleline&&stream.eol()){return outclass}}else if(stream.match(delimiter)){state.tokenize=tokenBase;return outclass}else{stream.eat(/['"\/]/)}}if(singleline){if(parserConf.singleLineStringErrors){outclass=ERRORCLASS}else{state.tokenize=tokenBase}}return outclass}}function longComment(stream,state){while(!stream.eol()){stream.eatWhile(/[^#]/);if(stream.match("###")){state.tokenize=tokenBase;break}stream.eatWhile("#")}return"comment"}function indent(stream,state,type){type=type||"coffee";for(var offset=0,align=!1,alignOffset=null,scope=state.scope;scope;scope=scope.prev){if("coffee"===scope.type||"}"==scope.type){offset=scope.offset+conf.indentUnit;break}}if("coffee"!==type){align=null;alignOffset=stream.column()+stream.current().length}else if(state.scope.align){state.scope.align=!1}state.scope={offset:offset,type:type,prev:state.scope,align:align,alignOffset:alignOffset}}function dedent(stream,state){if(!state.scope.prev)return;if("coffee"===state.scope.type){for(var _indent=stream.indentation(),matched=!1,scope=state.scope;scope;scope=scope.prev){if(_indent===scope.offset){matched=!0;break}}if(!matched){return!0}while(state.scope.prev&&state.scope.offset!==_indent){state.scope=state.scope.prev}return!1}else{state.scope=state.scope.prev;return!1}}function tokenLexer(stream,state){var style=state.tokenize(stream,state),current=stream.current();// Handle scope changes.
if("return"===current){state.dedent=!0}if(("->"===current||"=>"===current)&&stream.eol()||"indent"===style){indent(stream,state)}var delimiter_index="[({".indexOf(current);if(-1!==delimiter_index){indent(stream,state,"])}".slice(delimiter_index,delimiter_index+1))}if(indentKeywords.exec(current)){indent(stream,state)}if("then"==current){dedent(stream,state)}if("dedent"===style){if(dedent(stream,state)){return ERRORCLASS}}delimiter_index="])}".indexOf(current);if(-1!==delimiter_index){while("coffee"==state.scope.type&&state.scope.prev)state.scope=state.scope.prev;if(state.scope.type==current)state.scope=state.scope.prev}if(state.dedent&&stream.eol()){if("coffee"==state.scope.type&&state.scope.prev)state.scope=state.scope.prev;state.dedent=!1}return style}var external={startState:function(basecolumn){return{tokenize:tokenBase,scope:{offset:basecolumn||0,type:"coffee",prev:null,align:!1},prop:!1,dedent:0}},token:function(stream,state){var fillAlign=null===state.scope.align&&state.scope;if(fillAlign&&stream.sol())fillAlign.align=!1;var style=tokenLexer(stream,state);if(style&&"comment"!=style){if(fillAlign)fillAlign.align=!0;state.prop="punctuation"==style&&"."==stream.current()}return style},indent:function(state,text){if(state.tokenize!=tokenBase)return 0;var scope=state.scope,closer=text&&-1<"])}".indexOf(text.charAt(0));if(closer)while("coffee"==scope.type&&scope.prev)scope=scope.prev;var closes=closer&&scope.type===text.charAt(0);if(scope.align)return scope.alignOffset-(closes?1:0);else return(closes?scope.prev:scope).offset},lineComment:"#",fold:"indent"};return external});// IANA registered media type
// https://www.iana.org/assignments/media-types/
CodeMirror.defineMIME("application/vnd.coffeescript","coffeescript");CodeMirror.defineMIME("text/x-coffeescript","coffeescript");CodeMirror.defineMIME("text/coffeescript","coffeescript")});