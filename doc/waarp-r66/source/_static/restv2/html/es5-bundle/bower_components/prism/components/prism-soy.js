(function(Prism){var stringPattern=/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,numberPattern=/\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;Prism.languages.soy={comment:[/\/\*[\s\S]*?\*\//,{pattern:/(\s)\/\/.*/,lookbehind:!0/* ignoreName */ /* skipSlots */,greedy:!0}],"command-arg":{pattern:/({+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,lookbehind:!0,alias:"string",inside:{punctuation:/\./}},parameter:{pattern:/({+\/?\s*@?param\??\s+)\.?[\w.]+/,lookbehind:!0,alias:"variable"},keyword:[{pattern:/({+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,lookbehind:!0},/\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\b/],delimiter:{pattern:/^{+\/?|\/?}+$/,alias:"punctuation"},property:/\w+(?==)/,variable:{pattern:/\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+]))*/,inside:{string:{pattern:stringPattern,greedy:!0},number:numberPattern,punctuation:/[\[\].?]/}},string:{pattern:stringPattern,greedy:!0},function:[/\w+(?=\()/,{pattern:/(\|[^\S\r\n]*)\w+/,lookbehind:!0}],boolean:/\b(?:true|false)\b/,number:numberPattern,operator:/\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,punctuation:/[{}()\[\]|.,:]/};// Tokenize all inline Soy expressions
Prism.hooks.add("before-tokenize",function(env){var soyPattern=/{{.+?}}|{.+?}|\s\/\/.*|\/\*[\s\S]*?\*\//g,soyLitteralStart="{literal}",soyLitteralEnd="{/literal}",soyLitteralMode=/* eat */ /* ignoreName */!1/* skipSlots */ /* skipSlots */;Prism.languages["markup-templating"].buildPlaceholders(env,"soy",soyPattern,function(match){// Soy tags inside {literal} block are ignored
if(match===soyLitteralEnd){soyLitteralMode=!1}if(!soyLitteralMode){if(match===soyLitteralStart){soyLitteralMode=!0}return!0}return!1})});// Re-insert the tokens after tokenizing
Prism.hooks.add("after-tokenize",function(env){Prism.languages["markup-templating"].tokenizePlaceholders(env,"soy")})})(Prism);