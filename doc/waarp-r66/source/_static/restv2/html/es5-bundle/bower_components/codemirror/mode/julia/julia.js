// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function(mod){if("object"==("undefined"===typeof exports?"undefined":babelHelpers.typeof(exports))&&"object"==("undefined"===typeof module?"undefined":babelHelpers.typeof(module)))// CommonJS
mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)// AMD
define(["../../lib/codemirror"],mod);else// Plain browser env
mod(CodeMirror)})(function(CodeMirror){"use strict";CodeMirror.defineMode("julia",function(config,parserConf){function wordRegexp(words,end){if("undefined"===typeof end){end="\\b"}return new RegExp("^(("+words.join(")|(")+"))"+end)}var octChar="\\\\[0-7]{1,3}",hexChar="\\\\x[A-Fa-f0-9]{1,2}",sChar="\\\\[abefnrtv0%?'\"\\\\]",uChar="([^\\u0027\\u005C\\uD800-\\uDFFF]|[\\uD800-\\uDFFF][\\uDC00-\\uDFFF])",operators=parserConf.operators||wordRegexp(["[<>]:","[<>=]=","<<=?",">>>?=?","=>","->","\\/\\/","[\\\\%*+\\-<>!=\\/^|&\\u00F7\\u22BB]=?","\\?","\\$","~",":","\\u00D7","\\u2208","\\u2209","\\u220B","\\u220C","\\u2218","\\u221A","\\u221B","\\u2229","\\u222A","\\u2260","\\u2264","\\u2265","\\u2286","\\u2288","\\u228A","\\u22C5","\\b(in|isa)\\b(?!.?\\()"],""),delimiters=parserConf.delimiters||/^[;,()[\]{}]/,identifiers=parserConf.identifiers||/^[_A-Za-z\u00A1-\u2217\u2219-\uFFFF][\w\u00A1-\u2217\u2219-\uFFFF]*!*/,chars=wordRegexp([octChar,hexChar,sChar,uChar],"'"),openersList=["begin","function","type","struct","immutable","let","macro","for","while","quote","if","else","elseif","try","finally","catch","do"],closersList=["end","else","elseif","catch","finally"],keywordsList=["if","else","elseif","while","for","begin","let","end","do","try","catch","finally","return","break","continue","global","local","const","export","import","importall","using","function","where","macro","module","baremodule","struct","type","mutable","immutable","quote","typealias","abstract","primitive","bitstype"],builtinsList=["true","false","nothing","NaN","Inf"];CodeMirror.registerHelper("hintWords","julia",keywordsList.concat(builtinsList));var openers=wordRegexp(openersList),closers=wordRegexp(closersList),keywords=wordRegexp(keywordsList),builtins=wordRegexp(builtinsList),macro=/^@[_A-Za-z][\w]*/,symbol=/^:[_A-Za-z\u00A1-\uFFFF][\w\u00A1-\uFFFF]*!*/,stringPrefixes=/^(`|([_A-Za-z\u00A1-\uFFFF]*"("")?))/;function inArray(state){return 0<state.nestedArrays}function inGenerator(state){return 0<state.nestedGenerators}function currentScope(state,n){if("undefined"===typeof n){n=0}if(state.scopes.length<=n){return null}return state.scopes[state.scopes.length-(n+1)]}// tokenizers
function tokenBase(stream,state){// Handle multiline comments
if(stream.match(/^#=/,/* eat */ /* ignoreName */ /* ignoreName */!1/* skipSlots */ /* skipSlots */)){state.tokenize=tokenComment;return state.tokenize(stream,state)}// Handle scope changes
var leavingExpr=state.leavingExpr;if(stream.sol()){leavingExpr=!1}state.leavingExpr=!1;if(leavingExpr){if(stream.match(/^'+/)){return"operator"}}if(stream.match(/\.{4,}/)){return"error"}else if(stream.match(/\.{1,3}/)){return"operator"}if(stream.eatSpace()){return null}var ch=stream.peek();// Handle single line comments
if("#"===ch){stream.skipToEnd();return"comment"}if("["===ch){state.scopes.push("[");state.nestedArrays++}if("("===ch){state.scopes.push("(");state.nestedGenerators++}if(inArray(state)&&"]"===ch){if("if"===currentScope(state)){state.scopes.pop()}while("for"===currentScope(state)){state.scopes.pop()}state.scopes.pop();state.nestedArrays--;state.leavingExpr=!0/* skipSlots */}if(inGenerator(state)&&")"===ch){if("if"===currentScope(state)){state.scopes.pop()}while("for"===currentScope(state)){state.scopes.pop()}state.scopes.pop();state.nestedGenerators--;state.leavingExpr=!0}if(inArray(state)){if("end"==state.lastToken&&stream.match(/^:/)){return"operator"}if(stream.match(/^end/)){return"number"}}var match;if(match=stream.match(openers,!1)){state.scopes.push(match[0])}if(stream.match(closers,!1)){state.scopes.pop()}// Handle type annotations
if(stream.match(/^::(?![:\$])/)){state.tokenize=tokenAnnotation;return state.tokenize(stream,state)}// Handle symbols
if(!leavingExpr&&stream.match(symbol)||stream.match(/:([<>]:|<<=?|>>>?=?|->|\/\/|\.{2,3}|[\.\\%*+\-<>!\/^|&]=?|[~\?\$])/)){return"builtin"}// Handle parametric types
//if (stream.match(/^{[^}]*}(?=\()/)) {
//  return "builtin";
//}
// Handle operators and Delimiters
if(stream.match(operators)){return"operator"}// Handle Number Literals
if(stream.match(/^\.?\d/,!1)){var imMatcher=RegExp(/^im\b/),numberLiteral=!1;// Floats
if(stream.match(/^\d*\.(?!\.)\d*([Eef][\+\-]?\d+)?/i)){numberLiteral=!0}if(stream.match(/^\d+\.(?!\.)\d*/)){numberLiteral=!0}if(stream.match(/^\.\d+/)){numberLiteral=!0}if(stream.match(/^0x\.[0-9a-f]+p[\+\-]?\d+/i)){numberLiteral=!0}// Integers
if(stream.match(/^0x[0-9a-f]+/i)){numberLiteral=!0}// Hex
if(stream.match(/^0b[01]+/i)){numberLiteral=!0}// Binary
if(stream.match(/^0o[0-7]+/i)){numberLiteral=!0}// Octal
if(stream.match(/^[1-9]\d*(e[\+\-]?\d+)?/)){numberLiteral=!0}// Decimal
// Zero by itself with no other piece of number.
if(stream.match(/^0(?![\dx])/i)){numberLiteral=!0}if(numberLiteral){// Integer literals may be "long"
stream.match(imMatcher);state.leavingExpr=!0;return"number"}}// Handle Chars
if(stream.match(/^'/)){state.tokenize=tokenChar;return state.tokenize(stream,state)}// Handle Strings
if(stream.match(stringPrefixes)){state.tokenize=tokenStringFactory(stream.current());return state.tokenize(stream,state)}if(stream.match(macro)){return"meta"}if(stream.match(delimiters)){return null}if(stream.match(keywords)){return"keyword"}if(stream.match(builtins)){return"builtin"}var isDefinition=state.isDefinition||"function"==state.lastToken||"macro"==state.lastToken||"type"==state.lastToken||"struct"==state.lastToken||"immutable"==state.lastToken;if(stream.match(identifiers)){if(isDefinition){if("."===stream.peek()){state.isDefinition=!0;return"variable"}state.isDefinition=!1;return"def"}if(stream.match(/^({[^}]*})*\(/,!1)){state.tokenize=tokenCallOrDef;return state.tokenize(stream,state)}state.leavingExpr=!0;return"variable"}// Handle non-detected items
stream.next();return"error"}function tokenCallOrDef(stream,state){var match=stream.match(/^(\(\s*)/);if(match){if(0>state.firstParenPos)state.firstParenPos=state.scopes.length;state.scopes.push("(");state.charsAdvanced+=match[1].length}if("("==currentScope(state)&&stream.match(/^\)/)){state.scopes.pop();state.charsAdvanced+=1;if(state.scopes.length<=state.firstParenPos){var isDefinition=stream.match(/^(\s*where\s+[^\s=]+)*\s*?=(?!=)/,!1);stream.backUp(state.charsAdvanced);state.firstParenPos=-1;state.charsAdvanced=0;state.tokenize=tokenBase;if(isDefinition)return"def";return"builtin"}}// Unfortunately javascript does not support multiline strings, so we have
// to undo anything done upto here if a function call or definition splits
// over two or more lines.
if(stream.match(/^$/g,!1)){stream.backUp(state.charsAdvanced);while(state.scopes.length>state.firstParenPos){state.scopes.pop()}state.firstParenPos=-1;state.charsAdvanced=0;state.tokenize=tokenBase;return"builtin"}state.charsAdvanced+=stream.match(/^([^()]*)/)[1].length;return state.tokenize(stream,state)}function tokenAnnotation(stream,state){stream.match(/.*?(?=,|;|{|}|\(|\)|=|$|\s)/);if(stream.match(/^{/)){state.nestedParameters++}else if(stream.match(/^}/)&&0<state.nestedParameters){state.nestedParameters--}if(0<state.nestedParameters){stream.match(/.*?(?={|})/)||stream.next()}else if(0==state.nestedParameters){state.tokenize=tokenBase}return"builtin"}function tokenComment(stream,state){if(stream.match(/^#=/)){state.nestedComments++}if(!stream.match(/.*?(?=(#=|=#))/)){stream.skipToEnd()}if(stream.match(/^=#/)){state.nestedComments--;if(0==state.nestedComments)state.tokenize=tokenBase}return"comment"}function tokenChar(stream,state){var isChar=!1,match;if(stream.match(chars)){isChar=!0}else if(match=stream.match(/\\u([a-f0-9]{1,4})(?=')/i)){var value=parseInt(match[1],16);if(55295>=value||57344<=value){// (U+0,U+D7FF), (U+E000,U+FFFF)
isChar=!0;stream.next()}}else if(match=stream.match(/\\U([A-Fa-f0-9]{5,8})(?=')/)){var value=parseInt(match[1],16);if(1114111>=value){// U+10FFFF
isChar=!0;stream.next()}}if(isChar){state.leavingExpr=!0;state.tokenize=tokenBase;return"string"}if(!stream.match(/^[^']+(?=')/)){stream.skipToEnd()}if(stream.match(/^'/)){state.tokenize=tokenBase}return"error"}function tokenStringFactory(delimiter){if("\"\"\""===delimiter.substr(-3)){delimiter="\"\"\""}else if("\""===delimiter.substr(-1)){delimiter="\""}function tokenString(stream,state){if(stream.eat("\\")){stream.next()}else if(stream.match(delimiter)){state.tokenize=tokenBase;state.leavingExpr=!0;return"string"}else{stream.eat(/[`"]/)}stream.eatWhile(/[^\\`"]/);return"string"}return tokenString}var external={startState:function startState(){return{tokenize:tokenBase,scopes:[],lastToken:null,leavingExpr:!1,isDefinition:!1,nestedArrays:0,nestedComments:0,nestedGenerators:0,nestedParameters:0,charsAdvanced:0,firstParenPos:-1}},token:function token(stream,state){var style=state.tokenize(stream,state),current=stream.current();if(current&&style){state.lastToken=current}return style},indent:function indent(state,textAfter){var delta=0;if("]"===textAfter||")"===textAfter||"end"===textAfter||"else"===textAfter||"catch"===textAfter||"elseif"===textAfter||"finally"===textAfter){delta=-1}return(state.scopes.length+delta)*config.indentUnit},electricInput:/\b(end|else|catch|finally)\b/,blockCommentStart:"#=",blockCommentEnd:"=#",lineComment:"#",closeBrackets:"()[]{}\"\"",fold:"indent"};return external});CodeMirror.defineMIME("text/x-julia","julia")});